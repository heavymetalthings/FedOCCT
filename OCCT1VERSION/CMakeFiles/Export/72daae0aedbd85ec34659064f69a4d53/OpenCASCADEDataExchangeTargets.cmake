# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.23)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS TKXSBase TKSTEPBase TKSTEPAttr TKSTEP209 TKSTEP TKIGES TKXCAF TKXDEIGES TKXDESTEP TKSTL TKVRML TKXmlXCAF TKBinXCAF TKRWMesh)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target TKXSBase
add_library(TKXSBase SHARED IMPORTED)

set_target_properties(TKXSBase PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKBRep;TKernel;TKMath;TKG2d;TKG3d;TKTopAlgo;TKGeomBase;TKShHealing"
)

# Create imported target TKSTEPBase
add_library(TKSTEPBase SHARED IMPORTED)

set_target_properties(TKSTEPBase PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKernel;TKXSBase;TKMath"
)

# Create imported target TKSTEPAttr
add_library(TKSTEPAttr SHARED IMPORTED)

set_target_properties(TKSTEPAttr PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKernel;TKXSBase;TKSTEPBase"
)

# Create imported target TKSTEP209
add_library(TKSTEP209 SHARED IMPORTED)

set_target_properties(TKSTEP209 PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKernel;TKXSBase;TKSTEPBase"
)

# Create imported target TKSTEP
add_library(TKSTEP SHARED IMPORTED)

set_target_properties(TKSTEP PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKernel;TKSTEPAttr;TKSTEP209;TKSTEPBase;TKBRep;TKMath;TKG2d;TKShHealing;TKTopAlgo;TKG3d;TKGeomBase;TKGeomAlgo;TKXSBase"
)

# Create imported target TKIGES
add_library(TKIGES SHARED IMPORTED)

set_target_properties(TKIGES PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKBRep;TKernel;TKMath;TKTopAlgo;TKShHealing;TKG2d;TKG3d;TKGeomBase;TKGeomAlgo;TKPrim;TKBool;TKXSBase"
)

# Create imported target TKXCAF
add_library(TKXCAF SHARED IMPORTED)

set_target_properties(TKXCAF PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKBRep;TKernel;TKMath;TKService;TKG2d;TKTopAlgo;TKV3d;TKCDF;TKLCAF;TKG3d;TKCAF;TKVCAF"
)

# Create imported target TKXDEIGES
add_library(TKXDEIGES SHARED IMPORTED)

set_target_properties(TKXDEIGES PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKBRep;TKernel;TKMath;TKXSBase;TKCDF;TKLCAF;TKG2d;TKG3d;TKXCAF;TKIGES"
)

# Create imported target TKXDESTEP
add_library(TKXDESTEP SHARED IMPORTED)

set_target_properties(TKXDESTEP PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKBRep;TKSTEPAttr;TKernel;TKMath;TKXSBase;TKTopAlgo;TKG2d;TKCAF;TKSTEPBase;TKCDF;TKLCAF;TKG3d;TKXCAF;TKSTEP;TKShHealing"
)

# Create imported target TKSTL
add_library(TKSTL SHARED IMPORTED)

set_target_properties(TKSTL PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKernel;TKMath;TKBRep;TKG2d;TKG3d;TKTopAlgo"
)

# Create imported target TKVRML
add_library(TKVRML SHARED IMPORTED)

set_target_properties(TKVRML PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKBRep;TKTopAlgo;TKMath;TKGeomBase;TKernel;TKPrim;TKG2d;TKG3d;TKMesh;TKHLR;TKService;TKGeomAlgo;TKV3d;TKLCAF;TKXCAF"
)

# Create imported target TKXmlXCAF
add_library(TKXmlXCAF SHARED IMPORTED)

set_target_properties(TKXmlXCAF PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKXmlL;TKBRep;TKCDF;TKMath;TKernel;TKService;TKG2d;TKGeomBase;TKCAF;TKG3d;TKLCAF;TKXCAF;TKXml"
)

# Create imported target TKBinXCAF
add_library(TKBinXCAF SHARED IMPORTED)

set_target_properties(TKBinXCAF PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKBRep;TKXCAF;TKMath;TKService;TKernel;TKBinL;TKG2d;TKCAF;TKCDF;TKG3d;TKLCAF;TKBin"
)

# Create imported target TKRWMesh
add_library(TKRWMesh SHARED IMPORTED)

set_target_properties(TKRWMesh PROPERTIES
  INTERFACE_LINK_LIBRARIES "TKernel;TKMath;TKMesh;TKXCAF;TKLCAF;TKV3d;TKBRep;TKG3d;TKService"
)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/OpenCASCADEDataExchangeTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
    if(NOT EXISTS "${_cmake_file}")
      message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "TKBRep" "TKernel" "TKMath" "TKG2d" "TKG3d" "TKTopAlgo" "TKGeomBase" "TKShHealing" "TKGeomAlgo" "TKPrim" "TKBool" "TKService" "TKV3d" "TKCDF" "TKLCAF" "TKCAF" "TKVCAF" "TKMesh" "TKHLR" "TKXmlL" "TKXml" "TKBinL" "TKBin" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
